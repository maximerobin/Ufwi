# File generated by EdenWall: {{ _generation_time_ }}
#
# Sample configuration file for ISC dhcpd for Debian
#
# $Id: dhcpd.conf,v 1.1.1.1 2002/05/21 00:07:44 peloy Exp $
#
# VARIABLES:
# ha_status: {{ ha_status }}
# custom: {{ custom }}

# The ddns-updates-style parameter controls whether or not the server will
# attempt to do a DNS update when a lease is confirmed. We default to the
# behavior of the version 2 packages ('none', since DHCP v2 didn't
# have support for DDNS.)
#ddns-update-style interim;

# option definitions common to all supported networks...

default-lease-time {{default_lease_time}};
max-lease-time {{max_lease_time}};

# This DHCP server is the official DHCP server for the local
# network.
authoritative;

# Use this to send dhcp log messages to a different log file (you also
# have to hack syslog.conf to complete the redirection).
log-facility {{log_facility}};

{% if ha_status == "PRIMARY" or ha_status == "SECONDARY" %}
failover peer "dhcp-failover" {
  {% if ha_status == "PRIMARY" -%}
  primary;
  address 5.0.0.1;
  peer address 5.0.0.2;
  {%- else -%}
  secondary;
  address 5.0.0.2;
  peer address 5.0.0.1;
  {%- endif %}
  port 519;
  peer port 519;
  max-response-delay 60;
  max-unacked-updates 10;
  {% if ha_status == "PRIMARY" -%}
  split 255; # primary is responsible for all
  {% endif %}
  mclt 3600;
}
{% endif %}

{% macro rangeconf net, netmask, start, end, dns, router, ha_status %}
subnet {{net}} netmask {{netmask}} {
 {% if dns %} option domain-name-servers {{dns}}; {% endif %}
  option routers {{router}};
  pool {
    {% if ha_status == "PRIMARY" or ha_status == "SECONDARY" -%}failover peer "dhcp-failover";{%- endif %}
    range {{start}} {{end}};
  }
}
{% endmacro %}

#Configured ranges
{% for range in ranges %}
    {%- if range.isUnset(range.router) -%}
        {%- set router = range.getRouterFromNet() -%}
    {%- else -%}
        {%- set router = range.router.strNormal() -%}
    {%- endif -%}
    {{ rangeconf(
        range.net.net.strNormal().split('/')[0],
        range.net.net.strNetmask(),
        range.start.strNormal(),
        range.end.strNormal(),
        range.dns_server.strNormal(),
        router,
        ha_status
        ) }}

{% endfor %}

{% if custom %}
include "{{custom}}";
{% endif %}

