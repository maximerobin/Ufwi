##########################################
# Nuauth Configuration file
# File generated by EdenWall: {{ _generation_time_ }}
##########################################

# Nuauth
#############################################

# address nuauth listens on for clients
nuauth_client_listen_addr="0.0.0.0"

# address nuauth listens on for nufw packets
nuauth_nufw_listen_addr="127.0.0.1"

# socket name for communication between nufw and nuauth (use with "nufw -d"; this replaces nuauth_nufw_listen_addr)
nuauth_client_listen_socket="/var/run/nuauth/nufw-nuauth.socket"

# port for nufw gw request
nuauth_gw_packet_port=4128

# port for user authentification packet
nuauth_user_packet_port=4129

# NuFW
############################################
# address of the nufw gw
# in UDP clear mode this is the address nuauth
# respond to authentication request
# In TLS mode transform this variable in a list
# containing all the ips used to connect to the
# nuauth server :
# nufw_gw_addr="192.168.75.1 192.168.75.254"
#
nufw_gw_addr="127.0.0.1"

############
# port where the nufw gw waits for authentication answer
# (Not used in TLS mode)
nufw_gw_port=4128

############
# Is nufw using able to use libnetfilter_conntrack
# and able to kill a session
nufw_has_conntrack=1

############
# Is nufw using able to use libnetfilter_conntrack
# and has fixed timeout patch
nufw_has_fixed_timeout=1


# Comportemental items
# ############################################

# Debug level (0<=debug_level<=9)
nuauth_debug_level=0

# Debug area, binary and between
# DEBUG_AREA_MAIN = 1 Main domain
# DEBUG_AREA_PACKET = 2 Packet domain
# DEBUG_AREA_USER = 4 User domain
# DEBUG_AREA_GW = 8 Gateway domain
# DEBUG_AREA_AUTH = 16 Auth. domain
# default : DEBUG_AREA_ALL = 31
# nuauth_debug_areas=31

#What to do when several groups user is member of disagree about access rights
nuauth_prio_to_nok=2

# client can work with two modes :
# POLL : client check each time interval if it need to send a packet (traffic economy for WAN)
# PUSH : nuauth warn client that they may need to send authentication packet (better response time on LAN)
nuauth_push_to_client=1

# user connection policy to choose betwwen :
# 0 : no login restriction (default)
# 1 : one login per user
# 2 : one login per ip
# nuauth_connect_policy=1

# Reject (instead drop) when connection is reached
# 0: use drop (default)
# 1: reject (send icmp unreached message)
nuauth_reject_after_timeout=0

# Reject (instead drop) when user is not in any group of a ACCEPT acl
# 0: use drop (default)
# 1: reject (send icmp unreached message)
nuauth_reject_authenticated_drop=0



# Do we use a fallback hello authentication mode for non NuFW supported
# protocols ?
# This brings authentication for all protocols based on IP
# by doing a posteriori IP based authentication.
# WARNING : Authentication is FAR less strict than nufw original protocol :
#  * It authenticates NATed computer (and every computers behind the same firewall)
#  * It is strictly MONO user
#  * But, it can authenticate all type of IP flows
{% if portal_enabled %}
nuauth_hello_authentication=1
{% else %}
nuauth_hello_authentication=0
{% endif %}

# Do we use fallback mode when no client are found ?
# nuauth_push_to_client has to be set to 1 if you choose to enable it
nuauth_do_ip_authentication=0

# time in second to keep packet in the nuauth conntrack
nuauth_packet_timeout=10

# set a user session duration after this duration is is necessary
# to reauthenticate
# set to 0 if you want to have unlimited session
# example :
# nuauth_session_timeout=3600
# acl datas persistance in cache (in second)
nuauth_datas_persistance=300

# timeout for authentication negotiation (in second)
# You can set it to low value if your system has no load problem and
# if the used client ask password before connecting)
nuauth_auth_nego_timeout=90

# number of threads to work on user request
nuauth_number_usercheckers=3

# number of threads to work on gw request
nuauth_number_aclcheckers=3

# number of threads to work on gw request
nuauth_number_loggers=1

# number of threads to work on session logging
nuauth_number_session_loggers=1

# number of threads to work on user authentication
nuauth_number_authcheckers=5

# number of ip authentication workers
nuauth_number_ipauthcheckers=2

# maximum number of a simultaneously connected
# nufw authentication clients
# default : 256
nuauth_tls_max_clients={{ nuauth_tls_max_clients }}

# maximum number of simultaneously connected
# nufw servers
# default : 16
# nuauth_tls_max_servers=8


##############################################################
# Module configuration :
#  syntax is the following
#   list of modules separated by space
#  syntax of a module :
#   name[:type[:config file]]
#  if syntax is :
#   name : load module "name" with config file included in nuauth.conf
#   name:type : load module "type" with config file CONFIG_DIR/modules/name.conf
#   name:type:conf : load module "type" with config file "conf"
##############################################################

## Authentication module for user :
# to be choozen in :
# - libldap : user credentials are stored on a LDAP server
# - dbm : user credentials are stored in a gdbm
# - plaintext  : user credentials are stored in a text file
# - system : authentication is done against PAM and groups are system groups. This provides
# a convenient way to use nss features and/or pam-modules

# nuauth_user_check_module, nuauth_get_user_id_module,
# nuauth_get_user_groups_module and nuauth_nnd_socket_path are defined in the
# following included file.
include "/etc/nufw/nuauth.d/nuauth_user_dir.conf"

## Acl checking  module :
# to be choozen in :
# - libldap
# - plaintext

nuauth_acl_check_module="libldap"

# Cache acl for more performance ?
nuauth_acl_cache=1

###############################
# xml_defs module
##############################
# Place where periods have to be read
xml_defs_periodfile="/var/lib/nuface3/periods.xml"

## Period handling module:
# to be choozen in:
# - xml_defs
# nuauth_periods_module="xml_defs"

## ip authentication module
# to be chozen in :
# ipauthident
# rpc (TODO)
#
nuauth_ip_authentication_module="libipauthident"

##############################################
#Choose user logging method
##############################################
#You can log to MySQL, PostgreSQL, syslog or Prelude
#Therefore, acceptable values for this parameter are:
# : "mysql", "pgsql", "syslog", "nuprelude"
nuauth_user_logs_module="ulogd2"

# define with nuauth_user_session_logs_module  which method you
# want to use for user connection and disconnection
# Available modules are :
#       syslog: log message with syslog
#       script: run a custom script at user connection  (CONFDIR/user-up.sh) and disconnection (CONFDIR/user-down.sh)
#       mysql: log users connection and disconnection in a sql table
#       nuprelude: log to Prelude IDS
# example : nuauth_user_session_logs_module="syslog mysql"
nuauth_user_session_logs_module="pgsql{% if portal_enabled %} script{% endif %}"
nuauth_auth_error_log_module="pgsql"

include "/etc/nufw/nuauth.d/nuauth_tls.conf"
include "/etc/nufw/nuauth.d/nuauth_krb5.conf"

############################################
# Users tracking
#############################################

# decide if we're logging user activity
# log level is the sum of values :
# 0 : no log at all
# 1 : log new user (in syslog)
# 2 : log rejected packets
# 4 : log accepted packets
# 8 : do session tracking
# complete session tracking need special iptables
# rules, described in documentation

nuauth_log_users=9

#Controls whether the users logging is absolutely safe : access is logged before
#granted. This is probably necessary if SQL backend is used for SSO.
nuauth_log_users_sync=0

# update log entries to avoid accidental double connection
# DO NOT DISABLE IT BY CHANGING IT TO 0 if you want strict security
# WHEN USING SSO MODULES
nuauth_log_users_strict=0

nuauth_unix_sndbuf_size=1248280

####################################################
# plaintext parameters
#####################################################
#plaintext_userfile="/etc/nufw/users.nufw"
#plaintext_aclfile="/etc/nufw/acls.nufw"

plaintext_userfile="/etc/nufw/users.nufw"
plaintext_aclfile="/etc/nufw/acls.nufw"

###################################################
# system parameters
###################################################
# convert username to uppercase before authentication
# set to 1 if needed
#system_convert_username_to_uppercase=0

# convert username to lowercase before authentication
# set to 1 if needed (winbind case)
#system_convert_username_to_lowercase=0

# add a lock to be able to deal with non thread
# safe pam modules. For more safety this is set to 1 by default
# NEEDED for winbind.
system_pam_module_not_threadsafe=1

# Some glibc (read 2.3.2) have a buggy implementation
# of getgrouplist which causes a crash. If this is the case
# set the following option to the maximum number of groups
# for a single user.
system_glibc_cant_guess_maxgroups=0

# When username is given with "DOMAIN\user" it calls
# pam authentication with username equal to "user" if option
# is set to 1.
#system_suppress_prefixed_domain=0

###########################################
# Ldap external auth
###########################################

# Connection parameters
###########################################

# address of the ldap server
ldap_server_addr="127.0.0.1"

# port of the ldap server
ldap_server_port=389

# dn and password to bind ldap connection to
ldap_bind_dn="cn=nuauth,dc=edenwall,dc=com"
ldap_bind_password="DoshDab9"

# ldap request type
# set to 1 : request on DstPort is done with equality
# set to 0 : request on DstPort is done with range
# equality is faster than range
# range can be more simple to administrate
ldap_filter_type=0

# Timeout of ldap request
ldap_request_timeout=4


# Search parameters
###########################################

# base dn for search request
# default for ldap_acls_base_dn,ldap_users_base_dn
# if they are not set

ldap_basedn="dc=edenwall,dc=com"

# base dn for acl search request
ldap_acls_base_dn="ou=acls,dc=edenwall,dc=com"
# base dn for acl Timeranges definitions
ldap_acls_timerange_base_dn="dc=timeranges,dc=edenwall,dc=com"

# base dn for user search request
ldap_users_base_dn="ou=people,dc=edenwall,dc=com"


##############################################
# DBM users check
##############################################

# containing the users credentials
# use nufw_dbm to modify or add entries
dbm_users_file="/etc/nufw/users-gdbm.nufw"


###############################################
# Database User Logging config
###############################################

#MYSql server address
mysql_server_addr="localhost"

#Mysql server port
mysql_server_port=3306

#Mysql User to login as
mysql_user="nuauth"

#Mysql password, associated with username
mysql_passwd="sqlnuauth"

#Name of MYsql database to connect to
mysql_db_name="ulogd"

#Name of table name to connect to. Must belong to the chosen database. Specified
#user must have rights on this table
mysql_table_name="ulog"

#Name of table to connect to for user session logging. Must belong to the
#chosen database. Specified user must have rights on this table
mysql_users_table_name="users"

#Time in seconds we consider connection to the database to be lost if we have no
#answer
mysql_request_timeout=5

#Mysql SSL options
#Set mysql_use_ssl=1 to use SSL, else other ssl options will be ignored
mysql_use_ssl=0

#Set mysql_ssl_keyfile to the full path of the file containing your PRIVATE key.
#This must be set if you want to use ssl, as default value is NULL
mysql_ssl_keyfile="/etc/nufw/ssl/mysql.key"

#Set mysql_ssl_certfile to the full path of the file containing your PUBLIC certificate
#This must be set if you want to use ssl, as default value is NULL
mysql_ssl_certfile="/etc/nufw/ssl/mysql.cert"

#Set mysql_ssl_ca to the full path of the file containing your CA (Certificate Authority) file
#UNSET THIS FIELD IF YOU DON'T WANT TO USE a CA
mysql_ssl_ca="/etc/nufw/ssl/mysql.ca"

#Set mysql_ssl_capath to the full path of a DIRECTORY containing your CA
#Certificate Authority) files, in PEM format
#UNSET THIS FIELD IF YOU DON'T WANT TO USE CAs
mysql_ssl_capath="/etc/nufw/ssl/mysql.cas/"

#Set mysql_ssl_cipher to the list of ciphers you wish to use for Mysql
#connections. A complete cipher list on your system should be available if you
#issue "openssl ciphers"
#The default value here is "ALL:!ADH:+RC4:@STRENGTH", which is OpenSSL default,
#and means "Use any but give RC4 the lowest priority"
#For more info see : http://www.mkssoftware.com/docs/man1/openssl_ciphers.1.asp
mysql_ssl_cipher="ALL:!ADH:+RC4:@STRENGTH"

#PGSql server address
pgsql_server_addr="127.0.0.1"

#PGsql  server port
pgsql_server_port=5432

#PGsql User to login as
pgsql_user="nuauth"

#PGsql password, associated with username
pgsql_passwd="ib1vnSoHi2TDxRrq"

#Whether to use SSL or not (THIS PARAMETER IS IGNORED FOR NOW)
pgsql_ssl=prefer

#Name of PGsql database to connect to
pgsql_db_name="ulogd"

#Name of table name to connect to. Must belong to the chosen database. Specified
#user must have rights on this table
pgsql_table_name="ulog"

#Time in seconds we consider connection to the database to be lost if we have no
#answer
pgsql_request_timeout=5

# Using ephemeral DH key exchange yields forward secrecy, as the connection can
# only be decrypted, when the DH key is known. By generating a temporary DH key
# inside the server application that is lost when the application is left, it
# becomes impossible for an attacker to decrypt past sessions, even if he gets
# hold of the normal (certified) key, as this key was only used for signing.
#
# If no file is specified, the DH parameters are generated when nuauth starts,
# which can take some time.
#nuauth_tls_dh_params="/etc/nufw/certs/nuauth-dh_params.pem"

